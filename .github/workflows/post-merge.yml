name: Post merge

on:
  push:
    branches: [ master ]
    paths:
    - 'hallway-dashboard-be/**'
    - 'template.yml'
    - '.github/**'

jobs:

  build-and-deploy-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install required tools
      run: sudo apt install musl-tools -y
    - name: Add target
      run: rustup target add x86_64-unknown-linux-musl
    - name: Build
      run: |
        cd hallway-dashboard-be
        cargo build --release --target x86_64-unknown-linux-musl
        zip -j lambda.zip ./target/x86_64-unknown-linux-musl/release/bootstrap
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
    - name: Calculate lambda SHA256
      run: |
        LAMBDA_SHA256=`sha256sum hallway-dashboard-be/lambda.zip | cut -d" " -f1`
        echo "::set-env name=CHECKSUM::$LAMBDA_SHA256"
    - name: Upload lambda to S3
      run: aws s3 cp hallway-dashboard-be/lambda.zip s3://${{ secrets.S3_ARTIFACT_BUCKET }}/hallway-dashboard-$CHECKSUM
    - name: Update S3 key for lambda
      run: sed -i "s/S3-KEY-SET-IN-PIPELINE/hallway-dashboard-$CHECKSUM/" template.yml
    - name: Deploy to AWS
      run: |
        aws cloudformation deploy --template-file template.yml --stack-name hallway-dashboard --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset --parameter-overrides \
        S3ArtifactBucket=${{ secrets.S3_ARTIFACT_BUCKET }} \
        DarkSkyApiKey=${{ secrets.DARK_SKY_API_KEY }} \
        TrafiklabApiKey=${{ secrets.TRAFIKLAB_API_KEY }} \
        PublicTransportStop=${{ secrets.PUBLIC_TRANSPORT_STOP }} \
        PublicTransportDirection=${{ secrets.PUBLIC_TRANSPORT_DIRECTION }}
  build-and-deploy-frontend:
    needs: build-and-deploy-backend
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
    - name: Obtain S3 read access key
      run: echo "::set-env name=READ_ACCESS_KEY_ID::`aws cloudformation describe-stacks --stack-name hallway-dashboard --query "Stacks[0].Outputs[?OutputKey=='ReadUserAccessKeyId'].OutputValue" --output text`
    - name: Obtain S3 read access secret
      run: echo "::set-env name=READ_ACCESS_KEY_SECRET::`aws cloudformation describe-stacks --stack-name hallway-dashboard --query "Stacks[0].Outputs[?OutputKey=='ReadUserAccessKeySecret'].OutputValue" --output text`
