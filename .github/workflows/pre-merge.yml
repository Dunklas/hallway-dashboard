name: Pre merge

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: CloudFormation Lint
      uses: scottbrenner/cfn-lint-action@master
      with:
        args: template.yml

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Unit tests (backend)
      run: (cd hallway-dashboard-be && cargo test -- --test-threads=1)
    - name: Unit tests (frontend)
      run: (cd hallway-dashboard-fe && yarn && yarn run test-ci)

  browser-test:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: Run
      run: |
        cd hallway-dashboard-fe
        yarn
        yarn add wait-on
        REACT_APP_AWS_REGION=${{ secrets.AWS_REGION }} \
        REACT_APP_S3_READ_ACCESS_KEY_ID=some-key-id \
        REACT_APP_S3_READ_ACCESS_KEY_SECRET=some-key-secret \
        REACT_APP_STORAGE_BUCKET=some-bucket \
        yarn start & ./node_modules/wait-on/bin/wait-on http://localhost:3000
        yarn run cypress-ci
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: cypess-video
        path: hallway-dashboard-fe/cypress/videos/


  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install required tools
      run: sudo apt install musl-tools -y
    - name: Add target
      run: rustup target add x86_64-unknown-linux-musl
    - name: Build
      run: |
        (cd hallway-dashboard-be && cargo build --release --target x86_64-unknown-linux-musl)
        zip -j lambda.zip ./hallway-dashboard-be/target/x86_64-unknown-linux-musl/release/bootstrap
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Obtain PR number
      run: |
        PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
        echo "::set-env name=PR_NUMBER::$PR_NUMBER"
    - name: Upload lambda to S3
      run: aws s3 cp lambda.zip s3://${{ secrets.S3_ARTIFACT_BUCKET }}/hallway-dashboard-$PR_NUMBER


  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd hallway-dashboard-fe
          yarn
          yarn run build
